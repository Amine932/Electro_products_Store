spring.application.name=Gateway-Service

spring.config.import=optional:configserver:${CONFIGSERVER_URI:http://localhost:8082}

server.port=8088

# ZipKin Configuration
management.tracing.sampling.probability=1.0

# Security Config

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/my_store

spring.security.oauth2.client.registration.keycloak.client-id=store_client
spring.security.oauth2.client.registration.keycloak.client-secret=xgQUEPqIMsn3N8Hta8bVBQj7bmCxNxML
spring.security.oauth2.client.registration.keycloak.provider=keycloak
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8080/realms/my_store/protocol/openid-connect/userinfo
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
spring.security.oauth2.client.registration.keycloak.redirect-uri=${KEYCLOAK_REDIRECT_URI:http://localhost:8088/login/oauth2/code/store_client}
spring.security.oauth2.client.provider.keycloak.authorization-uri=${KEYCLOAK_AUTH:http://localhost:8080/realms/my_store/protocol/openid-connect/auth}
spring.security.oauth2.client.provider.keycloak.token-uri=${KEYCLOAK_AUTH_TOKEN:http://localhost:8080/realms/my_store/protocol/openid-connect/token}
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${JWT_JWK_SET_URI:http://localhost:8080/realms/my_store/protocol/openid-connect/certs}
